/*
* @author xihuny
*
* Extension methods to convert any String from
* Latin to Thaana & Ascii to Thaana
*
* Usage:
*   myString.convertLatinToThaana()
*   myString.convertAsciiToThaana()
*/

extension ThaanaConversion on String {
  String convertLatinToThaana() {
    return asciiToThaana(latinToAscii(this));
  }

  String convertAsciiToThaana() {
    return asciiToThaana(this);
  }
}

/*
* Ported from jaa's thaana conversion(php) library
* https://github.com/jawish/thaana_conversions_php/blob/master/ThaanaConversions.php
*/

latinToAscii(String s) {
  String output = '';
  int i = 0;

  // Standardize input to lowercase
  String input = s.toLowerCase();

  while (i <= input.length - 1) {
    bool found = false;

    // Loop through combination lengths
    for (int c = 4; c > 0; c--) {
      // Get combination
      String comb =
          input.substring(i, i + c > input.length ? input.length : i + c);

      // Make sure combination is defined
      if (latinToAsciiMap.containsKey(comb)) {
        // Transliterate using the definition
        output += (latinToAsciiMap[comb]) ?? '';

        // Move onto next combination
        found = true;
        i += c;
        break;
      }
    }

    // Check if there was transliteration failure
    if (!found) {
      // Add combination to output directly
      output += input.substring(i, i + 1);
      i++;
    }
  }
  return output;
}

/*
* Mapping for Latin Thaana to Ascii
* The corpus used is very small and needs to be updated to get accurate results
*/
final latinToAsciiMap = {
  'a': 'wa',
  'aa': 'wA',
  'aajj': 'aqj',
  'add': 'aeDq',
  'ah': 'waSq',
  'aha': 'waha',
  'ari': 'wari',
  'au': 'wo',
  'b': 'bq',
  'ba': 'ba',
  'baa': 'bA',
  'bba': 'wqba',
  'bai': 'bawi',
  'baiy': 'batq',
  'be': 'be',
  'bbe': 'wqbe',
  'bee': 'bI',
  'bey': 'bE',
  'bi': 'bi',
  'bo': 'bo',
  'bbo': 'wqbo',
  'boo': 'bU',
  'boa': 'bO',
  'bu': 'bu',
  'bbu': 'wqbu',
  'by': 'bI',
  'cha': 'ca',
  'chaa': 'cA',
  'che': 'ce',
  'cher': 'cAr',
  'chey': 'cE',
  'chi': 'ci',
  'cho': 'co',
  'choo': 'cU',
  'choa': 'cO',
  'ci': 'si',
  'co': 'ko',
  'd': 'Dq',
  'da': 'Da',
  'daa': 'DA',
  'dda': 'wqDa',
  'dai': 'Dawi',
  'de': 'De',
  'dd': 'wqDe',
  'dee': 'DI',
  'dey': 'Deaq',
  'dha': 'da',
  'dhaa': 'dA',
  'dhe': 'de',
  'dhee': 'dI',
  'dhey': 'dE',
  'dhi': 'di',
  'dho': 'do',
  'dhoo': 'dU',
  'dhoa': 'dO',
  'dhu': 'du',
  'di': 'Di',
  'ddi': 'wqDi',
  'do': 'Do',
  'dhw': 'dO',
  'doo': 'DU',
  'doa': 'DO',
  'du': 'Du',
  'dy': 'DI',
  'e': 'we',
  'ee': 'wI',
  'eh': 'wewq',
  'ehe': 'wehe',
  'ehi': 'wehi',
  'ehu': 'wehu',
  'evvi': 'wqvi',
  'ey': 'wE',
  'f': 'fq',
  'fa': 'fa',
  'faa': 'fA',
  'fah': 'faSq',
  'fahe': 'fahI',
  'fai': 'fawi',
  'faiy': 'fatq',
  'fe': 'fe',
  'fee': 'fI',
  'fey': 'fE',
  'ff': 'fq',
  'ffi': 'fi',
  'fi': 'fi',
  'fo': 'fo',
  'foor': 'fUrq',
  'foos': 'fUsq',
  'foo': 'fU',
  'foa': 'fO',
  'fu': 'fu',
  'fy': 'fI',
  'g': 'gq',
  'ga': 'ga',
  'gaa': 'gA',
  'gai': 'gawi',
  'ge': 'ge',
  'gee': 'gI',
  'gey': 'gE',
  'gha': 'Gw',
  'gi': 'gi',
  'giou': 'jw',
  'go': 'go',
  'goo': 'gU',
  'goa': 'gO',
  'ggu': 'wqgu',
  'gu': 'gu',
  'h': 'wq',
  'ha': 'ha',
  'haa': 'hA',
  'hah': 'haSq',
  'hai': 'hawi',
  'he': 'he',
  'hee': 'hI',
  'heed': 'hIdq',
  'heem': 'hImq',
  'heh': 'heSq',
  'hey': 'hE',
  'hi': 'hi',
  'ho': 'ho',
  'hoo': 'hU',
  'hoa': 'hO',
  'hu': 'hu',
  'hy': 'hI',
  'i': 'wi',
  'idh': 'widq',
  'in': 'winq',
  'j': 'jq',
  'ja': 'ja',
  'jaa': 'jA',
  'je': 'je',
  'jeed': 'jIdq',
  'jey': 'jE',
  'ji': 'ji',
  'jje': 'wqje',
  'jjey': 'wqjE',
  'jo': 'jo',
  'joo': 'jU',
  'joa': 'jO',
  'ju': 'ju',
  'k': 'ku',
  'ka': 'ka',
  'kaa': 'kA',
  'kah': 'kaSq',
  'kaiy': 'katq',
  'ke': 'ke',
  'kee': 'kI',
  'key': 'kE',
  'kay': 'kE',
  'kh': 'Kq',
  'kha': 'KA',
  'khaa': 'KA',
  'khi': 'Ki',
  'ki': 'ki',
  'kka': 'aqka',
  'ko': 'ko',
  'koo': 'kU',
  'koa': 'kO',
  'koor': 'kUrq',
  'ku': 'ku',
  'ky': 'kI',
  'l': 'lq',
  'la': 'la',
  'laa': 'lA',
  'le': 'le',
  'lee': 'lI',
  'lev': 'lewq',
  'ley': 'lE',
  'lha': 'La',
  'lhe': 'Le',
  'lhey': 'LE',
  'lhay': 'LE',
  'lhi': 'Li',
  'lhu': 'Lu',
  'li': 'li',
  'lla': 'Q',
  'loa': 'lO',
  'lo': 'lo',
  'loo': 'lU',
  'lu': 'lu',
  'ly': 'lI',
  'm': 'mq',
  'ma': 'ma',
  'maa': 'mA',
  'me': 'me',
  'mee': 'mI',
  'mey': 'mE',
  'mi': 'mi',
  'mmai': 'maWi',
  'mo': 'mo',
  'moo': 'mU',
  'moa': 'mO',
  'mu': 'mu',
  'muh': 'muwq',
  'my': 'mI',
  'n': 'nq',
  'na': 'na',
  'naa': 'nA',
  'nah': 'naSq',
  'ne': 'ne',
  'nee': 'nI',
  'ney': 'nE',
  'ni': 'ni',
  'noo': 'nU',
  'noa': 'nO',
  'nu': 'nu',
  'ny': 'nI',
  'o': 'wo',
  'of': 'fo',
  'oiy': 'wotq',
  'oo': 'wU',
  'oa': 'wO',
  'ok': 'wOkE',
  'p': 'pq',
  'pa': 'pa',
  'paa': 'pA',
  'pi': 'pi',
  'pe': 'pe',
  'po': 'po',
  'pu': 'pu',
  'poo': 'pU',
  'poa': 'pO',
  'py': 'pI',
  'q': 'Qq',
  'qa': 'Qa',
  'qaa': 'QA',
  'qee': 'QI',
  'qy': 'QI',
  'qu': 'Qu',
  'qoo': 'QU',
  'qoa': 'QO',
  'qey': 'QE',
  'qi': 'Qi',
  'qe': 'Qe',
  'qqu': 'wqQu',
  'r': 'rq',
  'ra': 'ra',
  'raa': 'rA',
  'rah': 'raSq',
  're': 're',
  'ree': 'rI',
  'rey': 'rE',
  'ri': 'ri',
  'ro': 'ro',
  'roo': 'rU',
  'roa': 'rO',
  'roof': 'rUfq',
  'roon': 'rUnq',
  'rra': 'ra',
  'ru': 'ru',
  'ry': 'rI',
  's': 'sq',
  'sa': 'sa',
  'saa': 'sA',
  'se': 'se',
  'see': 'sI',
  'sey': 'sE',
  'sh': 'Cq',
  'sha': 'Ca',
  'shaa': 'CA',
  'she': 'Ce',
  'shee': 'CI',
  'shey': 'SE',
  'shi': 'Ci',
  'shu': 'Cu',
  'si': 'si',
  'sion': 'xanq',
  'so': 'so',
  'soo': 'sU',
  'soa': 'sO',
  'ss': 'sq',
  'ssa': 'sawq',
  'ssan': 'sanq',
  'ssy': 'sI',
  'su': 'su',
  'suf': 'sufq',
  'sy': 'sI',
  't': 'Tq',
  'ta': 'Ta',
  'te': 'Te',
  'tea': 'TI',
  'tee': 'TI',
  'tey': 'TE',
  'th': 't',
  'tha': 'ta',
  'thaa': 'tA',
  'thah': 'tawq',
  'the': 'te',
  'thee': 'tI',
  'they': 'tE',
  'thi': 'ti',
  'tho': 'to',
  'thu': 'tu',
  'thy': 'tI',
  'too': 'TU',
  'toa': 'TO',
  'ttaa': 'wqTA',
  'tte': 'wqTe',
  'u': 'wu',
  'uddi': 'wqdi',
  'va': 'va',
  'vaa': 'vA',
  've': 've',
  'vey': 'vE',
  'vee': 'vI',
  'vi': 'vi',
  'vo': 'vo',
  'vu': 'vu',
  'vva': 'wqva',
  'vvaa': 'wqvA',
  'voo': 'vU',
  'voa': 'vO',
  'w': 'wu',
  'wa': 'va',
  'waa': 'vA',
  'woo': 'vU',
  'woa': 'vO',
  'we': 've',
  'wey': 'vE',
  'wi': 'vi',
  'ya': 'ya',
  'yaa': 'yA',
  'ye': 'ye',
  'yey': 'yE',
  'yeve': 'yeve',
  'yo': 'yo',
  'yoo': 'yU',
  'yoa': 'yO',
  'yu': 'yu',
  'yya': 'wqya',
  'yyaa': 'wqyA',
  'yye': 'wqye',
  'yyoo': 'wqyU',
  'z': 'zq',
  'za': 'za',
  'zee': 'zI',
  'zi': 'zi',
  'zoo': 'zU',
  'zoa': 'zO',
  'zu': 'zu',
  'zy': 'zI',
  "'n": 'n'
};

/*
* Ported from kudanai's aThaanaUtils library for Android
* https://github.com/kudanai/aThaanaUtils/blob/master/athaanautils/src/main/java/com/athaanautils/ThaanaConversions.java
*/

String asciiToThaana(String s) {
  String strThaana = '';
  for (int i = 0; i < s.length; i++) {
    strThaana +=
        (asciiToThaanaMap.containsKey(s[i]) ? asciiToThaanaMap[s[i]] : s[i]) ??
            '';
  }
  return strThaana;
}

// Mapping for single character to its equivalent Thaana letter
final asciiToThaanaMap = {
  'h': '\u0780',
  'S': '\u0781',
  'n': '\u0782',
  'r': '\u0783',
  'b': '\u0784',
  'L': '\u0785',
  'k': '\u0786',
  'w': '\u0787',
  'v': '\u0788',
  'm': '\u0789',
  'f': '\u078A',
  'd': '\u078B',
  't': '\u078C',
  'l': '\u078D',
  'g': '\u078E',
  'N': '\u078F',
  's': '\u0790',
  'D': '\u0791',
  'z': '\u0792',
  'T': '\u0793',
  'y': '\u0794',
  'p': '\u0795',
  'j': '\u0796',
  'c': '\u0797',
  'X': '\u0798',
  'H': '\u0799',
  'K': '\u079A',
  'J': '\u079B',
  'R': '\u079C',
  'C': '\u079D',
  'M': '\u079E',
  'B': '\u079F',
  'Y': '\u07A0',
  'Z': '\u07A1',
  'W': '\u07A2',
  'G': '\u07A3',
  'Q': '\u07A4',
  'V': '\u07A5',
  'a': '\u07A6',
  'A': '\u07A7',
  'i': '\u07A8',
  'I': '\u07A9',
  'u': '\u07AA',
  'U': '\u07AB',
  'e': '\u07AC',
  'E': '\u07AD',
  'o': '\u07AE',
  'O': '\u07AF',
  'q': '\u07B0',
  'F': '\uFDF2',
  '?': '\u061F',
  'x': '\u00D7',
  'P': '\u00F7',
  ';': '\u061B',
  ',': '\u060C'
};
